# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Tue Sep 22 07:50:42 2009

import wx
from validations import numberValidator
from extraFunctions import *
from help_texts import help_tank
# begin wxGlade: dependencies
import wx.grid
# end wxGlade

# begin wxGlade: extracode

# end wxGlade

class formTank(wx.Dialog):
    data={}
    edit = -1
    position = (0,0)

    def __init__(self, *args, **kwds):
        # begin wxGlade: formTank.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE|wx.RESIZE_BORDER|wx.THICK_FRAME
        wx.Dialog.__init__(self, *args, **kwds)
        self.panel_buttons = wx.Panel(self, -1)
        self.panel_configure = wx.Panel(self, -1)
        self.configure_notebook = wx.Notebook(self.panel_configure, -1, style=0)
        self.notebook_state = wx.ScrolledWindow(self.configure_notebook, -1, style=wx.TAB_TRAVERSAL)
        self.notebook_post = wx.ScrolledWindow(self.configure_notebook, -1, style=wx.TAB_TRAVERSAL)
        self.notebook_general = wx.ScrolledWindow(self.configure_notebook, -1, style=wx.TAB_TRAVERSAL)
        self.label_0 = wx.StaticText(self.notebook_general, -1, "Number of Nodes:")
        self.data['nnod'] = wx.TextCtrl(self.notebook_general, -1, "", style=wx.TE_READONLY)
        self.label_1 = wx.StaticText(self.notebook_general, -1, "Degrees of Freedom:")
        self.data['ndof'] = wx.TextCtrl(self.notebook_general, -1, "3", style=wx.TE_READONLY)
        self.label_2 = wx.StaticText(self.notebook_general, -1, "Volume [cm^3]:")
        self.data['Volume'] = wx.TextCtrl(self.notebook_general, -1, "")
        self.label_3 = wx.StaticText(self.notebook_general, -1, "Mass [g]:")
        self.data['mass'] = wx.TextCtrl(self.notebook_general, -1, "")
        self.label_4 = wx.StaticText(self.notebook_general, -1, "H Film [W/(m^2 K)]:")
        self.data['h_film'] = wx.TextCtrl(self.notebook_general, -1, "")
        self.label_5 = wx.StaticText(self.notebook_general, -1, "Area Wall [cm^2]:")
        self.data['Area_wall'] = wx.TextCtrl(self.notebook_general, -1, "")
        self.label_6 = wx.StaticText(self.notebook_general, -1, "Wall Temperature [K]:")
        self.data['T_wall'] = wx.TextCtrl(self.notebook_general, -1, "")
        self.label_7 = wx.StaticText(self.notebook_general, -1, "Cd Ports:         ")
        self.button_5_copy = wx.Button(self.notebook_general, -1, "...")
        self.data['Cd_ports'] = wx.grid.Grid(self.notebook_general, -1, size=(1, 1))
        self.data['state_ini'] = wx.grid.Grid(self.notebook_state, -1, size=(1, 1))
        self.data['histo'] = wx.CheckListBox(self.notebook_post, -1, (20, 20), (200, 150), ["Save Own State"],wx.LB_MULTIPLE)
        self.data['extras'] = wx.CheckBox(self.notebook_post, -1, "Calculate Extras (mass I/O, rate, etc)")
        self.data['label'] = wx.TextCtrl(self.notebook_general, -1, "")
        self.label_11 = wx.StaticText(self.notebook_general, -1, "Label:")
        self.button_2 = wx.Button(self.notebook_state, -1, "...")
        self.accept = wx.Button(self.panel_buttons, wx.ID_OK, "")
        self.cancel = wx.Button(self.panel_buttons, wx.ID_CANCEL, "")
        self.help = wx.ContextHelpButton(self.panel_buttons)
        self.__set_properties()
        self.setContextualHelp()
        self.__do_layout()

        self.Bind(wx.EVT_TEXT, self.onChangeNnod, self.data['nnod'])
        self.Bind(wx.EVT_TEXT, self.onChangeNdof, self.data['ndof'])
        self.Bind(wx.EVT_TEXT, self.onChangeNdof, self.data['Volume'])
        self.Bind(wx.EVT_TEXT, self.onChangeNdof, self.data['mass'])
        self.Bind(wx.EVT_TEXT, self.onChangeNdof, self.data['h_film'])
        self.Bind(wx.EVT_TEXT, self.onChangeNdof, self.data['Area_wall'])
        self.Bind(wx.EVT_TEXT, self.onChangeNdof, self.data['T_wall'])
        self.Bind(wx.EVT_BUTTON, self.onLoadCd, self.button_5_copy)
        self.Bind(wx.EVT_BUTTON, self.onLoadState, self.button_2)
        self.Bind(wx.EVT_BUTTON, self.ConfigureAccept, self.accept)

        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: formTank.__set_properties
        self.SetTitle("Configure Tank")
        self.SetSize(wx.DLG_SZE(self, (212, 168)))
        self.label_0.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['nnod'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['nnod'].SetValidator(numberValidator())
        self.label_1.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['ndof'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['ndof'].SetValidator(numberValidator())
        self.label_2.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['Volume'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['Volume'].SetValidator(numberValidator())
        self.label_3.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['mass'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['mass'].SetValidator(numberValidator())
        self.label_4.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['h_film'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['h_film'].SetValidator(numberValidator())
        self.label_5.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['Area_wall'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['Area_wall'].SetValidator(numberValidator())
        self.label_6.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['T_wall'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['T_wall'].SetValidator(numberValidator())
        self.label_7.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.button_5_copy.SetMinSize(wx.DLG_SZE(self.button_5_copy, (16, 12)))
        self.data['Cd_ports'].CreateGrid(0,1)
        self.data['Cd_ports'].SetRowLabelSize(25)
        self.data['Cd_ports'].SetColLabelSize(15)
        self.data['Cd_ports'].EnableDragColSize(0)
        self.data['Cd_ports'].EnableDragRowSize(0)
        self.data['Cd_ports'].EnableDragGridSize(0)
        self.data['Cd_ports'].SetColLabelValue(0, "value")
        self.data['Cd_ports'].SetMinSize(wx.DLG_SZE(self.data['Cd_ports'], (70,100)))
        self.data['Cd_ports'].SetDefaultCellFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['Cd_ports'].SetDefaultRowSize(18)
        self.data['Cd_ports'].SetLabelFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.notebook_general.SetMinSize(wx.DLG_SZE(self.notebook_general, (258, 1344)))
        self.notebook_general.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.notebook_general.SetScrollRate(10, 10)
        self.data['state_ini'].CreateGrid(1, 3)
        self.data['state_ini'].SetRowLabelSize(25)
        self.data['state_ini'].SetColLabelSize(15)
        self.data['state_ini'].EnableDragColSize(0)
        self.data['state_ini'].EnableDragRowSize(0)
        self.data['state_ini'].EnableDragGridSize(0)
        self.data['state_ini'].SetColLabelValue(0, "Density")
        self.data['state_ini'].SetColLabelValue(1, "Pressure")
        self.data['state_ini'].SetColLabelValue(2, "Temperature")
        self.data['state_ini'].SetMinSize(wx.DLG_SZE(self.data['state_ini'], (160, 128)))
        self.data['state_ini'].SetDefaultCellFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['state_ini'].SetDefaultRowSize(18)
        self.data['state_ini'].SetLabelFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['histo'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['extras'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['label'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.label_11.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.button_2.SetMinSize(wx.DLG_SZE(self.button_2, (16, 12)))
        self.notebook_state.SetScrollRate(10, 10)
        self.configure_notebook.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.panel_configure.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.accept.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.cancel.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: formTank.__do_layout
        configure_background = wx.BoxSizer(wx.VERTICAL)
        sizer_buttons = wx.GridSizer(1, 3, 0, 0)
        configure_sizer = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_5 = wx.FlexGridSizer(1, 2, 0, 0)
        grid_sizer_2 = wx.FlexGridSizer(1, 2, 0, 6)
        grid_sizer_8 = wx.FlexGridSizer(2, 1, 0, 0)
        grid_sizer_41 = wx.FlexGridSizer(1, 2, 0, 0)
        grid_sizer_7 = wx.FlexGridSizer(8, 2, 0, 0)
        grid_sizer_111 = wx.FlexGridSizer(1, 2, 0, 0)
        grid_sizer_7.Add(self.label_11, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_7.Add(self.data['label'], 0, 0, 0)
        grid_sizer_7.Add(self.label_0, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_7.Add(self.data['nnod'], 0, 0, 0)
        grid_sizer_7.Add(self.label_1, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_7.Add(self.data['ndof'], 0, 0, 0)
        grid_sizer_7.Add(self.label_2, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_7.Add(self.data['Volume'], 0, 0, 0)
        grid_sizer_7.Add(self.label_3, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_7.Add(self.data['mass'], 0, 0, 0)
        grid_sizer_7.Add(self.label_4, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_7.Add(self.data['h_film'], 0, 0, 0)
        grid_sizer_7.Add(self.label_5, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_7.Add(self.data['Area_wall'], 0, 0, 0)
        grid_sizer_7.Add(self.label_6, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_7.Add(self.data['T_wall'], 0, 0, 0)
        grid_sizer_2.Add(grid_sizer_7, 1, wx.EXPAND, 0)
        grid_sizer_41.Add(self.label_7, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_41.Add(self.button_5_copy, 0, 0, 0)
        grid_sizer_8.Add(grid_sizer_41, 1, wx.EXPAND, 0)
        grid_sizer_8.Add(self.data['Cd_ports'], 1, wx.EXPAND|wx.SHAPED, 0)
        grid_sizer_2.Add(grid_sizer_8, 1, wx.EXPAND, 0)
        self.notebook_general.SetSizer(grid_sizer_2)
        grid_sizer_5.Add(self.data['state_ini'], 1, wx.EXPAND, 0)
        grid_sizer_5.Add(self.button_2, 0, 0, 0)
        self.notebook_state.SetSizer(grid_sizer_5)
		
        grid_sizer_111.Add(self.data['histo'], 0, 0, 0)
        grid_sizer_111.Add(self.data['extras'], 0, 0, 0)
        self.notebook_post.SetSizer(grid_sizer_111)
        self.configure_notebook.AddPage(self.notebook_general, "General")
        self.configure_notebook.AddPage(self.notebook_state, "State")
        self.configure_notebook.AddPage(self.notebook_post, "Post Process")
        configure_sizer.Add(self.configure_notebook, 1, wx.EXPAND, 0)
        self.panel_configure.SetSizer(configure_sizer)
        configure_background.Add(self.panel_configure, 1, wx.EXPAND, 0)
        sizer_buttons.Add(self.accept, 0, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_buttons.Add(self.help, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_buttons.Add(self.cancel, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 0)
        self.panel_buttons.SetSizer(sizer_buttons)
        configure_background.Add(self.panel_buttons, 0, wx.EXPAND, 0)
        self.SetSizer(configure_background)
        self.Layout()
        # end wxGlade

    def onChangeNnod(self, event): # wxGlade: formTank.<event_handler>
		try:
			ownNodes = 1 #solo el propio
			extNodes = int(self.data['nnod'].GetValue()) - ownNodes
			
			nstate = self.data['state_ini'].GetNumberRows()
			ncd = self.data['Cd_ports'].GetNumberRows()
			if ownNodes > nstate:
				self.data['state_ini'].AppendRows(ownNodes-nstate)
			else:
				if ownNodes < nstate:
					self.data['state_ini'].DeleteRows(nstate-(nstate-ownNodes), nstate-ownNodes)
			if extNodes > ncd:
				self.data['Cd_ports'].AppendRows(extNodes-ncd)
			else:
				if extNodes < ncd:
					self.data['Cd_ports'].DeleteRows(ncd-(ncd-extNodes), ncd-extNodes)
		except ValueError:
			nodes = None

    def onChangeNdof(self, event): # wxGlade: formTank.<event_handler>
        try:
			ndof = int(self.data['ndof'].GetValue())
			nstate = self.data['state_ini'].GetNumberCols()
			#for i in range(ndof):
			#	self.data['state_ini'].SetColLabelValue(i,"ndof %d" % (i+1))
			if(ndof>nstate):
				self.data['state_ini'].AppendCols(ndof-nstate)
			else:
				if(ndof<nstate):
					self.data['state_ini'].DeleteCols(nstate-(nstate-ndof), nstate-ndof)
        except ValueError:
            ndof = None

    def ConfigureAccept(self, event): # wxGlade: formTank.<event_handler>
        can_out=1
        for key in self.data:
            if (self.data[key].GetValidator()):
                if(not(self.data[key].GetValidator().Validate(self,'number'))):
                    can_out=0
        
        if(can_out==1):
            self.EndModal(wx.ID_OK)
        else:
            wx.MessageBox("Some fields have some error (empty or no-digit value)!", "Error")

    def onLoadCd(self, event): # wxGlade: formTank.<event_handler>
        if self.data['Cd_ports'].IsEnabled():
            dlg = wx.FileDialog(self, message="Open a Data File", defaultDir="./loads",defaultFile="", wildcard="*.txt", style=wx.OPEN)
            if dlg.ShowModal() == wx.ID_OK:
                namefile = dlg.GetPath()
                data = loadData(namefile,"n",2)
                if(data==-1):
                    wx.MessageBox("Incorrect data", "Error")
                else:	
                    setGrid(data,self.data['Cd_ports'])
            dlg.Destroy()
            self.setLabels()
        else:
            wx.MessageBox("You must active 'user-defined'", "Error") 

    def onLoadState(self, event): # wxGlade: formTank.<event_handler>
        try:
            ndof = int(self.data['ndof'].GetValue())
            #nodes = int(self.data['nnod'].GetValue())
            nodes = 1
            if self.data['state_ini'].IsEnabled():
                dlg = wx.FileDialog(self, message="Open a Data File", defaultDir="./loads",defaultFile="", wildcard="*.txt", style=wx.OPEN)
                if dlg.ShowModal() == wx.ID_OK:
                    namefile = dlg.GetPath()
                    data = loadData(namefile,nodes,ndof)
                    if(data==-1):
                        wx.MessageBox("Incorrect data", "Error")
                    else:	
                        setGrid(data,self.data['state_ini'])
                dlg.Destroy()
                self.setLabels()		
            else:
                wx.MessageBox("You must active 'user-defined'", "Error") 
       	except ValueError:
            wx.MessageBox("You must complete number of nodes and degress of freedom first", "Error")

    def addHisto(self,labels=[]):
		nodes = int(self.data['nnod'].GetValue())
		for i in range(nodes-1):
			self.data['histo'].Append("Connection with "+labels[i])

    def setLabels(self):
		self.data['state_ini'].SetColLabelValue(0, "Density")
		self.data['state_ini'].SetColLabelValue(1, "Pressure")
		self.data['state_ini'].SetColLabelValue(2, "Temperature")
		self.data['Cd_ports'].SetColLabelValue(0, "Cd")

    def setContextualHelp(self):
		for key in self.data:
			self.data[key].SetHelpText(help_tank[key])

# end of class formTank


